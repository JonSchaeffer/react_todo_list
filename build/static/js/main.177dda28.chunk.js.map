{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","borderBottom","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","onClick","delTodo","btnStyle","Component","border","borderRadius","float","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","flex","placeholder","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.177dda28.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>TodoList</h1>\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link> \n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\nconst linkStyle = {\n    color: '#fff',\n    textDecoration: 'none'\n}\n\nexport default Header;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport class TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: 'f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n     \n  render() {\n      const { id, title } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n          <p>\n            <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/> {' '}\n          {title}\n          <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\n          </p>\n      </div>\n    )\n  }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle = {\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 9px',\n    borderRadius: '50%',\n    float: 'right'\n\n}\n\n//PropTypes\nTodoItem.propTypes = {\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired\n}\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n        return this.props.todos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\n        ));\n        \n  }\n}\n\n//PropTypes\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nexport default Todos;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component {\n    state = {\n        title: ''\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({ title: '' });\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n        <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\n            <input \n            type=\"text\" \n            name=\"title\" \n            style ={{ flex: '10', padding: '5px'}} \n            placeholder=\"Add Todo...\"\n            value={this.state.title}\n            onChange={this.onChange}\n            />\n            <input \n            type=\"submit\" \n            value=\"Submit\" \n            className=\"btn\" \n            style={{flex: '1'}}\n            />\n        </form>\n\n    )\n  }\n}\n\n//PropTypes\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired,\n}\n\nexport default AddTodo\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <React.Fragment>\n        <h1>About</h1>\n        <p>This is the TodoList app v1.0.0. This is used to study and become familiar with ReactJS</p>\n    </React.Fragment>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/layout/Header'\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n//import uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: [\n      \n    ]\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({ todos: res.data }))\n  }\n\n  //Toggle Complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n          todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n  \n  //DeleteTodo\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/{id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n    \n  }\n\n  //Add Todo\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n    .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n    \n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path =\"/\" render={props => (\n              <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n            <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}